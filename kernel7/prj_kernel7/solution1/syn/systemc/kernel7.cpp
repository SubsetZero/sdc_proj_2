// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "kernel7.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic kernel7::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic kernel7::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<37> kernel7::ap_ST_fsm_state1 = "1";
const sc_lv<37> kernel7::ap_ST_fsm_state2 = "10";
const sc_lv<37> kernel7::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<37> kernel7::ap_ST_fsm_state17 = "1000";
const sc_lv<37> kernel7::ap_ST_fsm_state18 = "10000";
const sc_lv<37> kernel7::ap_ST_fsm_state19 = "100000";
const sc_lv<37> kernel7::ap_ST_fsm_state20 = "1000000";
const sc_lv<37> kernel7::ap_ST_fsm_state21 = "10000000";
const sc_lv<37> kernel7::ap_ST_fsm_state22 = "100000000";
const sc_lv<37> kernel7::ap_ST_fsm_state23 = "1000000000";
const sc_lv<37> kernel7::ap_ST_fsm_state24 = "10000000000";
const sc_lv<37> kernel7::ap_ST_fsm_state25 = "100000000000";
const sc_lv<37> kernel7::ap_ST_fsm_state26 = "1000000000000";
const sc_lv<37> kernel7::ap_ST_fsm_state27 = "10000000000000";
const sc_lv<37> kernel7::ap_ST_fsm_state28 = "100000000000000";
const sc_lv<37> kernel7::ap_ST_fsm_state29 = "1000000000000000";
const sc_lv<37> kernel7::ap_ST_fsm_state30 = "10000000000000000";
const sc_lv<37> kernel7::ap_ST_fsm_state31 = "100000000000000000";
const sc_lv<37> kernel7::ap_ST_fsm_state32 = "1000000000000000000";
const sc_lv<37> kernel7::ap_ST_fsm_state33 = "10000000000000000000";
const sc_lv<37> kernel7::ap_ST_fsm_state34 = "100000000000000000000";
const sc_lv<37> kernel7::ap_ST_fsm_state35 = "1000000000000000000000";
const sc_lv<37> kernel7::ap_ST_fsm_state36 = "10000000000000000000000";
const sc_lv<37> kernel7::ap_ST_fsm_state37 = "100000000000000000000000";
const sc_lv<37> kernel7::ap_ST_fsm_state38 = "1000000000000000000000000";
const sc_lv<37> kernel7::ap_ST_fsm_state39 = "10000000000000000000000000";
const sc_lv<37> kernel7::ap_ST_fsm_state40 = "100000000000000000000000000";
const sc_lv<37> kernel7::ap_ST_fsm_state41 = "1000000000000000000000000000";
const sc_lv<37> kernel7::ap_ST_fsm_state42 = "10000000000000000000000000000";
const sc_lv<37> kernel7::ap_ST_fsm_state43 = "100000000000000000000000000000";
const sc_lv<37> kernel7::ap_ST_fsm_state44 = "1000000000000000000000000000000";
const sc_lv<37> kernel7::ap_ST_fsm_state45 = "10000000000000000000000000000000";
const sc_lv<37> kernel7::ap_ST_fsm_state46 = "100000000000000000000000000000000";
const sc_lv<37> kernel7::ap_ST_fsm_state47 = "1000000000000000000000000000000000";
const sc_lv<37> kernel7::ap_ST_fsm_state48 = "10000000000000000000000000000000000";
const sc_lv<37> kernel7::ap_ST_fsm_state49 = "100000000000000000000000000000000000";
const sc_lv<37> kernel7::ap_ST_fsm_state50 = "1000000000000000000000000000000000000";
const sc_lv<32> kernel7::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool kernel7::ap_const_boolean_1 = true;
const bool kernel7::ap_const_boolean_0 = false;
const sc_lv<32> kernel7::ap_const_lv32_8 = "1000";
const sc_lv<32> kernel7::ap_const_lv32_C = "1100";
const sc_lv<32> kernel7::ap_const_lv32_10 = "10000";
const sc_lv<32> kernel7::ap_const_lv32_14 = "10100";
const sc_lv<32> kernel7::ap_const_lv32_18 = "11000";
const sc_lv<32> kernel7::ap_const_lv32_1C = "11100";
const sc_lv<32> kernel7::ap_const_lv32_20 = "100000";
const sc_lv<1> kernel7::ap_const_lv1_1 = "1";
const sc_lv<32> kernel7::ap_const_lv32_4 = "100";
const sc_lv<32> kernel7::ap_const_lv32_1 = "1";
const sc_lv<32> kernel7::ap_const_lv32_2 = "10";
const sc_lv<1> kernel7::ap_const_lv1_0 = "0";
const sc_lv<32> kernel7::ap_const_lv32_3 = "11";
const sc_lv<32> kernel7::ap_const_lv32_7 = "111";
const sc_lv<32> kernel7::ap_const_lv32_B = "1011";
const sc_lv<32> kernel7::ap_const_lv32_F = "1111";
const sc_lv<32> kernel7::ap_const_lv32_13 = "10011";
const sc_lv<32> kernel7::ap_const_lv32_17 = "10111";
const sc_lv<32> kernel7::ap_const_lv32_1B = "11011";
const sc_lv<32> kernel7::ap_const_lv32_1F = "11111";
const sc_lv<3> kernel7::ap_const_lv3_0 = "000";
const sc_lv<12> kernel7::ap_const_lv12_0 = "000000000000";
const sc_lv<64> kernel7::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> kernel7::ap_const_lv64_1 = "1";
const sc_lv<64> kernel7::ap_const_lv64_2 = "10";
const sc_lv<64> kernel7::ap_const_lv64_3 = "11";
const sc_lv<64> kernel7::ap_const_lv64_4 = "100";
const sc_lv<64> kernel7::ap_const_lv64_5 = "101";
const sc_lv<64> kernel7::ap_const_lv64_6 = "110";
const sc_lv<64> kernel7::ap_const_lv64_7 = "111";
const sc_lv<32> kernel7::ap_const_lv32_5 = "101";
const sc_lv<32> kernel7::ap_const_lv32_9 = "1001";
const sc_lv<32> kernel7::ap_const_lv32_D = "1101";
const sc_lv<32> kernel7::ap_const_lv32_11 = "10001";
const sc_lv<32> kernel7::ap_const_lv32_15 = "10101";
const sc_lv<32> kernel7::ap_const_lv32_19 = "11001";
const sc_lv<32> kernel7::ap_const_lv32_1D = "11101";
const sc_lv<32> kernel7::ap_const_lv32_21 = "100001";
const sc_lv<3> kernel7::ap_const_lv3_1 = "1";
const sc_lv<3> kernel7::ap_const_lv3_7 = "111";
const sc_lv<12> kernel7::ap_const_lv12_800 = "100000000000";
const sc_lv<12> kernel7::ap_const_lv12_1 = "1";
const sc_lv<32> kernel7::ap_const_lv32_1E = "11110";
const sc_lv<8> kernel7::ap_const_lv8_FF = "11111111";
const sc_lv<23> kernel7::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<2> kernel7::ap_const_lv2_0 = "00";
const sc_lv<2> kernel7::ap_const_lv2_1 = "1";
const sc_lv<5> kernel7::ap_const_lv5_2 = "10";
const sc_lv<32> kernel7::ap_const_lv32_24 = "100100";

kernel7::kernel7(sc_module_name name) : sc_module(name), mVcdFile(0) {
    ps_U = new kernel7_ps("ps_U");
    ps_U->clk(ap_clk);
    ps_U->reset(ap_rst);
    ps_U->address0(ps_address0);
    ps_U->ce0(ps_ce0);
    ps_U->we0(ps_we0);
    ps_U->d0(ap_var_for_const0);
    ps_U->q0(ps_q0);
    ps_U->address1(ps_address1);
    ps_U->ce1(ps_ce1);
    ps_U->we1(ps_we1);
    ps_U->d1(tmp_1_reg_381);
    ps_U->q1(ps_q1);
    kernel7_faddfsub_bkb_U1 = new kernel7_faddfsub_bkb<1,4,32,32,32>("kernel7_faddfsub_bkb_U1");
    kernel7_faddfsub_bkb_U1->clk(ap_clk);
    kernel7_faddfsub_bkb_U1->reset(ap_rst);
    kernel7_faddfsub_bkb_U1->din0(grp_fu_214_p0);
    kernel7_faddfsub_bkb_U1->din1(grp_fu_214_p1);
    kernel7_faddfsub_bkb_U1->opcode(grp_fu_214_opcode);
    kernel7_faddfsub_bkb_U1->ce(ap_var_for_const1);
    kernel7_faddfsub_bkb_U1->dout(grp_fu_214_p2);
    kernel7_fadd_32nscud_U2 = new kernel7_fadd_32nscud<1,4,32,32,32>("kernel7_fadd_32nscud_U2");
    kernel7_fadd_32nscud_U2->clk(ap_clk);
    kernel7_fadd_32nscud_U2->reset(ap_rst);
    kernel7_fadd_32nscud_U2->din0(reg_235);
    kernel7_fadd_32nscud_U2->din1(reg_228_pp0_iter8_reg);
    kernel7_fadd_32nscud_U2->ce(ap_var_for_const1);
    kernel7_fadd_32nscud_U2->dout(grp_fu_218_p2);
    kernel7_fcmp_32nsdEe_U3 = new kernel7_fcmp_32nsdEe<1,2,32,32,1>("kernel7_fcmp_32nsdEe_U3");
    kernel7_fcmp_32nsdEe_U3->clk(ap_clk);
    kernel7_fcmp_32nsdEe_U3->reset(ap_rst);
    kernel7_fcmp_32nsdEe_U3->din0(reg_228);
    kernel7_fcmp_32nsdEe_U3->din1(ap_var_for_const0);
    kernel7_fcmp_32nsdEe_U3->ce(ap_var_for_const1);
    kernel7_fcmp_32nsdEe_U3->opcode(ap_var_for_const2);
    kernel7_fcmp_32nsdEe_U3->dout(grp_fu_223_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln5_fu_243_p2);
    sensitive << ( phi_ln5_reg_192 );

    SC_METHOD(thread_and_ln12_fu_318_p2);
    sensitive << ( or_ln12_fu_312_p2 );
    sensitive << ( grp_fu_223_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state17);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state23);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state26);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state27);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state29);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state30);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state31);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state33);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state34);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state35);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state50);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_00001);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter7);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter8);

    SC_METHOD(thread_ap_block_state12_pp0_stage0_iter9);

    SC_METHOD(thread_ap_block_state13_pp0_stage0_iter10);

    SC_METHOD(thread_ap_block_state14_pp0_stage0_iter11);

    SC_METHOD(thread_ap_block_state15_pp0_stage0_iter12);

    SC_METHOD(thread_ap_block_state16_pp0_stage0_iter13);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter6);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( icmp_ln8_fu_260_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state50 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_enable_reg_pp0_iter10 );
    sensitive << ( ap_enable_reg_pp0_iter11 );
    sensitive << ( ap_enable_reg_pp0_iter12 );
    sensitive << ( ap_enable_reg_pp0_iter13 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state50 );

    SC_METHOD(thread_ap_return);
    sensitive << ( grp_fu_214_p2 );
    sensitive << ( ap_CS_fsm_state50 );

    SC_METHOD(thread_array1_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln11_fu_276_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_array1_ce0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_array2_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln11_fu_276_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_array2_ce0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_bitcast_ln12_fu_282_p1);
    sensitive << ( reg_228_pp0_iter6_reg );

    SC_METHOD(thread_grp_fu_214_opcode);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state47 );
    sensitive << ( ap_block_pp0_stage0_00001 );

    SC_METHOD(thread_grp_fu_214_p0);
    sensitive << ( reg_228 );
    sensitive << ( reg_235 );
    sensitive << ( array1_load_reg_361 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_grp_fu_214_p1);
    sensitive << ( reg_235 );
    sensitive << ( array2_load_reg_366 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state23 );
    sensitive << ( ap_CS_fsm_state27 );
    sensitive << ( ap_CS_fsm_state31 );
    sensitive << ( ap_CS_fsm_state35 );
    sensitive << ( ap_CS_fsm_state39 );
    sensitive << ( ap_CS_fsm_state43 );
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_i_fu_266_p2);
    sensitive << ( i_0_reg_203 );

    SC_METHOD(thread_icmp_ln12_1_fu_306_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( trunc_ln12_fu_296_p1 );

    SC_METHOD(thread_icmp_ln12_fu_300_p2);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( tmp_fu_286_p4 );

    SC_METHOD(thread_icmp_ln5_fu_254_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( phi_ln5_reg_192 );

    SC_METHOD(thread_icmp_ln8_fu_260_p2);
    sensitive << ( i_0_reg_203 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_idx_fu_272_p1);
    sensitive << ( i_0_reg_203 );

    SC_METHOD(thread_or_ln12_fu_312_p2);
    sensitive << ( icmp_ln12_1_fu_306_p2 );
    sensitive << ( icmp_ln12_fu_300_p2 );

    SC_METHOD(thread_ps_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( zext_ln5_fu_249_p1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln14_fu_324_p1 );

    SC_METHOD(thread_ps_address1);
    sensitive << ( ps_addr_1_reg_375_pp0_iter12_reg );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_enable_reg_pp0_iter13 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ps_ce0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( ap_CS_fsm_state29 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_enable_reg_pp0_iter7 );

    SC_METHOD(thread_ps_ce1);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_state17 );
    sensitive << ( ap_CS_fsm_state25 );
    sensitive << ( ap_CS_fsm_state33 );
    sensitive << ( ap_CS_fsm_state41 );
    sensitive << ( ap_enable_reg_pp0_iter13 );

    SC_METHOD(thread_ps_we0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ps_we1);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( and_ln12_reg_371_pp0_iter12_reg );
    sensitive << ( ap_enable_reg_pp0_iter13 );

    SC_METHOD(thread_tmp_fu_286_p4);
    sensitive << ( bitcast_ln12_fu_282_p1 );

    SC_METHOD(thread_trunc_ln12_fu_296_p1);
    sensitive << ( bitcast_ln12_fu_282_p1 );

    SC_METHOD(thread_zext_ln11_fu_276_p1);
    sensitive << ( i_0_reg_203 );

    SC_METHOD(thread_zext_ln14_fu_324_p1);
    sensitive << ( idx_reg_346_pp0_iter6_reg );

    SC_METHOD(thread_zext_ln5_fu_249_p1);
    sensitive << ( phi_ln5_reg_192 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln5_fu_254_p2 );
    sensitive << ( icmp_ln8_fu_260_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter12 );
    sensitive << ( ap_enable_reg_pp0_iter13 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "0000000000000000000000000000000000001";
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter10 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter11 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter12 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter13 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "kernel7_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, array1_address0, "(port)array1_address0");
    sc_trace(mVcdFile, array1_ce0, "(port)array1_ce0");
    sc_trace(mVcdFile, array1_q0, "(port)array1_q0");
    sc_trace(mVcdFile, array2_address0, "(port)array2_address0");
    sc_trace(mVcdFile, array2_ce0, "(port)array2_ce0");
    sc_trace(mVcdFile, array2_q0, "(port)array2_q0");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_0_reg_203, "i_0_reg_203");
    sc_trace(mVcdFile, grp_fu_214_p2, "grp_fu_214_p2");
    sc_trace(mVcdFile, reg_228, "reg_228");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter2, "ap_block_state5_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter3, "ap_block_state6_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter4, "ap_block_state7_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter5, "ap_block_state8_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter6, "ap_block_state9_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter7, "ap_block_state10_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter8, "ap_block_state11_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state12_pp0_stage0_iter9, "ap_block_state12_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_state13_pp0_stage0_iter10, "ap_block_state13_pp0_stage0_iter10");
    sc_trace(mVcdFile, ap_block_state14_pp0_stage0_iter11, "ap_block_state14_pp0_stage0_iter11");
    sc_trace(mVcdFile, ap_block_state15_pp0_stage0_iter12, "ap_block_state15_pp0_stage0_iter12");
    sc_trace(mVcdFile, ap_block_state16_pp0_stage0_iter13, "ap_block_state16_pp0_stage0_iter13");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, reg_228_pp0_iter6_reg, "reg_228_pp0_iter6_reg");
    sc_trace(mVcdFile, reg_228_pp0_iter7_reg, "reg_228_pp0_iter7_reg");
    sc_trace(mVcdFile, reg_228_pp0_iter8_reg, "reg_228_pp0_iter8_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, ap_CS_fsm_state26, "ap_CS_fsm_state26");
    sc_trace(mVcdFile, ap_CS_fsm_state30, "ap_CS_fsm_state30");
    sc_trace(mVcdFile, ap_CS_fsm_state34, "ap_CS_fsm_state34");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, ps_q0, "ps_q0");
    sc_trace(mVcdFile, reg_235, "reg_235");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, and_ln12_reg_371, "and_ln12_reg_371");
    sc_trace(mVcdFile, ps_q1, "ps_q1");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, add_ln5_fu_243_p2, "add_ln5_fu_243_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln5_fu_254_p2, "icmp_ln5_fu_254_p2");
    sc_trace(mVcdFile, icmp_ln8_fu_260_p2, "icmp_ln8_fu_260_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, i_fu_266_p2, "i_fu_266_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, idx_fu_272_p1, "idx_fu_272_p1");
    sc_trace(mVcdFile, idx_reg_346, "idx_reg_346");
    sc_trace(mVcdFile, idx_reg_346_pp0_iter1_reg, "idx_reg_346_pp0_iter1_reg");
    sc_trace(mVcdFile, idx_reg_346_pp0_iter2_reg, "idx_reg_346_pp0_iter2_reg");
    sc_trace(mVcdFile, idx_reg_346_pp0_iter3_reg, "idx_reg_346_pp0_iter3_reg");
    sc_trace(mVcdFile, idx_reg_346_pp0_iter4_reg, "idx_reg_346_pp0_iter4_reg");
    sc_trace(mVcdFile, idx_reg_346_pp0_iter5_reg, "idx_reg_346_pp0_iter5_reg");
    sc_trace(mVcdFile, idx_reg_346_pp0_iter6_reg, "idx_reg_346_pp0_iter6_reg");
    sc_trace(mVcdFile, array1_load_reg_361, "array1_load_reg_361");
    sc_trace(mVcdFile, array2_load_reg_366, "array2_load_reg_366");
    sc_trace(mVcdFile, and_ln12_fu_318_p2, "and_ln12_fu_318_p2");
    sc_trace(mVcdFile, and_ln12_reg_371_pp0_iter8_reg, "and_ln12_reg_371_pp0_iter8_reg");
    sc_trace(mVcdFile, and_ln12_reg_371_pp0_iter9_reg, "and_ln12_reg_371_pp0_iter9_reg");
    sc_trace(mVcdFile, and_ln12_reg_371_pp0_iter10_reg, "and_ln12_reg_371_pp0_iter10_reg");
    sc_trace(mVcdFile, and_ln12_reg_371_pp0_iter11_reg, "and_ln12_reg_371_pp0_iter11_reg");
    sc_trace(mVcdFile, and_ln12_reg_371_pp0_iter12_reg, "and_ln12_reg_371_pp0_iter12_reg");
    sc_trace(mVcdFile, ps_addr_1_reg_375, "ps_addr_1_reg_375");
    sc_trace(mVcdFile, ps_addr_1_reg_375_pp0_iter8_reg, "ps_addr_1_reg_375_pp0_iter8_reg");
    sc_trace(mVcdFile, ps_addr_1_reg_375_pp0_iter9_reg, "ps_addr_1_reg_375_pp0_iter9_reg");
    sc_trace(mVcdFile, ps_addr_1_reg_375_pp0_iter10_reg, "ps_addr_1_reg_375_pp0_iter10_reg");
    sc_trace(mVcdFile, ps_addr_1_reg_375_pp0_iter11_reg, "ps_addr_1_reg_375_pp0_iter11_reg");
    sc_trace(mVcdFile, ps_addr_1_reg_375_pp0_iter12_reg, "ps_addr_1_reg_375_pp0_iter12_reg");
    sc_trace(mVcdFile, grp_fu_218_p2, "grp_fu_218_p2");
    sc_trace(mVcdFile, tmp_1_reg_381, "tmp_1_reg_381");
    sc_trace(mVcdFile, ap_CS_fsm_state17, "ap_CS_fsm_state17");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_CS_fsm_state29, "ap_CS_fsm_state29");
    sc_trace(mVcdFile, ap_CS_fsm_state33, "ap_CS_fsm_state33");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter10, "ap_enable_reg_pp0_iter10");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter11, "ap_enable_reg_pp0_iter11");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter12, "ap_enable_reg_pp0_iter12");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter13, "ap_enable_reg_pp0_iter13");
    sc_trace(mVcdFile, ps_address0, "ps_address0");
    sc_trace(mVcdFile, ps_ce0, "ps_ce0");
    sc_trace(mVcdFile, ps_we0, "ps_we0");
    sc_trace(mVcdFile, ps_address1, "ps_address1");
    sc_trace(mVcdFile, ps_ce1, "ps_ce1");
    sc_trace(mVcdFile, ps_we1, "ps_we1");
    sc_trace(mVcdFile, phi_ln5_reg_192, "phi_ln5_reg_192");
    sc_trace(mVcdFile, zext_ln5_fu_249_p1, "zext_ln5_fu_249_p1");
    sc_trace(mVcdFile, zext_ln11_fu_276_p1, "zext_ln11_fu_276_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, zext_ln14_fu_324_p1, "zext_ln14_fu_324_p1");
    sc_trace(mVcdFile, grp_fu_214_p0, "grp_fu_214_p0");
    sc_trace(mVcdFile, grp_fu_214_p1, "grp_fu_214_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, ap_CS_fsm_state23, "ap_CS_fsm_state23");
    sc_trace(mVcdFile, ap_CS_fsm_state27, "ap_CS_fsm_state27");
    sc_trace(mVcdFile, ap_CS_fsm_state31, "ap_CS_fsm_state31");
    sc_trace(mVcdFile, ap_CS_fsm_state35, "ap_CS_fsm_state35");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, bitcast_ln12_fu_282_p1, "bitcast_ln12_fu_282_p1");
    sc_trace(mVcdFile, tmp_fu_286_p4, "tmp_fu_286_p4");
    sc_trace(mVcdFile, trunc_ln12_fu_296_p1, "trunc_ln12_fu_296_p1");
    sc_trace(mVcdFile, icmp_ln12_1_fu_306_p2, "icmp_ln12_1_fu_306_p2");
    sc_trace(mVcdFile, icmp_ln12_fu_300_p2, "icmp_ln12_fu_300_p2");
    sc_trace(mVcdFile, or_ln12_fu_312_p2, "or_ln12_fu_312_p2");
    sc_trace(mVcdFile, grp_fu_223_p2, "grp_fu_223_p2");
    sc_trace(mVcdFile, grp_fu_214_opcode, "grp_fu_214_opcode");
    sc_trace(mVcdFile, ap_block_pp0_stage0_00001, "ap_block_pp0_stage0_00001");
    sc_trace(mVcdFile, ap_CS_fsm_state50, "ap_CS_fsm_state50");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
    mHdltvinHandle.open("kernel7.hdltvin.dat");
    mHdltvoutHandle.open("kernel7.hdltvout.dat");
}

kernel7::~kernel7() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete ps_U;
    delete kernel7_faddfsub_bkb_U1;
    delete kernel7_fadd_32nscud_U2;
    delete kernel7_fcmp_32nsdEe_U3;
}

void kernel7::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_logic_1;
}

void kernel7::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv32_0;
}

void kernel7::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv5_2;
}

void kernel7::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln5_fu_254_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter10 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter10 = ap_enable_reg_pp0_iter9.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter11 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter11 = ap_enable_reg_pp0_iter10.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter12 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter12 = ap_enable_reg_pp0_iter11.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter13 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter13 = ap_enable_reg_pp0_iter12.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln5_fu_254_p2.read()))) {
            ap_enable_reg_pp0_iter13 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln5_fu_254_p2.read()))) {
        i_0_reg_203 = ap_const_lv12_0;
    } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(icmp_ln8_fu_260_p2.read(), ap_const_lv1_0))) {
        i_0_reg_203 = i_fu_266_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln5_fu_254_p2.read(), ap_const_lv1_0))) {
        phi_ln5_reg_192 = add_ln5_fu_243_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_ln5_reg_192 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read()))) {
        reg_235 = ps_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || 
                (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                 esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
                 esl_seteq<1,1,1>(and_ln12_reg_371.read(), ap_const_lv1_1)))) {
        reg_235 = ps_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        and_ln12_reg_371 = and_ln12_fu_318_p2.read();
        and_ln12_reg_371_pp0_iter10_reg = and_ln12_reg_371_pp0_iter9_reg.read();
        and_ln12_reg_371_pp0_iter11_reg = and_ln12_reg_371_pp0_iter10_reg.read();
        and_ln12_reg_371_pp0_iter12_reg = and_ln12_reg_371_pp0_iter11_reg.read();
        and_ln12_reg_371_pp0_iter8_reg = and_ln12_reg_371.read();
        and_ln12_reg_371_pp0_iter9_reg = and_ln12_reg_371_pp0_iter8_reg.read();
        idx_reg_346_pp0_iter2_reg = idx_reg_346_pp0_iter1_reg.read();
        idx_reg_346_pp0_iter3_reg = idx_reg_346_pp0_iter2_reg.read();
        idx_reg_346_pp0_iter4_reg = idx_reg_346_pp0_iter3_reg.read();
        idx_reg_346_pp0_iter5_reg = idx_reg_346_pp0_iter4_reg.read();
        idx_reg_346_pp0_iter6_reg = idx_reg_346_pp0_iter5_reg.read();
        ps_addr_1_reg_375_pp0_iter10_reg = ps_addr_1_reg_375_pp0_iter9_reg.read();
        ps_addr_1_reg_375_pp0_iter11_reg = ps_addr_1_reg_375_pp0_iter10_reg.read();
        ps_addr_1_reg_375_pp0_iter12_reg = ps_addr_1_reg_375_pp0_iter11_reg.read();
        ps_addr_1_reg_375_pp0_iter8_reg = ps_addr_1_reg_375.read();
        ps_addr_1_reg_375_pp0_iter9_reg = ps_addr_1_reg_375_pp0_iter8_reg.read();
        reg_228_pp0_iter6_reg = reg_228.read();
        reg_228_pp0_iter7_reg = reg_228_pp0_iter6_reg.read();
        reg_228_pp0_iter8_reg = reg_228_pp0_iter7_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()))) {
        array1_load_reg_361 = array1_q0.read();
        array2_load_reg_366 = array2_q0.read();
        idx_reg_346_pp0_iter1_reg = idx_reg_346.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(icmp_ln8_fu_260_p2.read(), ap_const_lv1_0))) {
        idx_reg_346 = idx_fu_272_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, and_ln12_fu_318_p2.read()))) {
        ps_addr_1_reg_375 =  (sc_lv<3>) (zext_ln14_fu_324_p1.read());
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state26.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state30.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state34.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()))) {
        reg_228 = grp_fu_214_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, and_ln12_reg_371_pp0_iter11_reg.read()))) {
        tmp_1_reg_381 = grp_fu_218_p2.read();
    }
}

void kernel7::thread_add_ln5_fu_243_p2() {
    add_ln5_fu_243_p2 = (!phi_ln5_reg_192.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(phi_ln5_reg_192.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void kernel7::thread_and_ln12_fu_318_p2() {
    and_ln12_fu_318_p2 = (or_ln12_fu_312_p2.read() & grp_fu_223_p2.read());
}

void kernel7::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void kernel7::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void kernel7::thread_ap_CS_fsm_state17() {
    ap_CS_fsm_state17 = ap_CS_fsm.read()[3];
}

void kernel7::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[4];
}

void kernel7::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[5];
}

void kernel7::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void kernel7::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[7];
}

void kernel7::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[8];
}

void kernel7::thread_ap_CS_fsm_state23() {
    ap_CS_fsm_state23 = ap_CS_fsm.read()[9];
}

void kernel7::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[11];
}

void kernel7::thread_ap_CS_fsm_state26() {
    ap_CS_fsm_state26 = ap_CS_fsm.read()[12];
}

void kernel7::thread_ap_CS_fsm_state27() {
    ap_CS_fsm_state27 = ap_CS_fsm.read()[13];
}

void kernel7::thread_ap_CS_fsm_state29() {
    ap_CS_fsm_state29 = ap_CS_fsm.read()[15];
}

void kernel7::thread_ap_CS_fsm_state30() {
    ap_CS_fsm_state30 = ap_CS_fsm.read()[16];
}

void kernel7::thread_ap_CS_fsm_state31() {
    ap_CS_fsm_state31 = ap_CS_fsm.read()[17];
}

void kernel7::thread_ap_CS_fsm_state33() {
    ap_CS_fsm_state33 = ap_CS_fsm.read()[19];
}

void kernel7::thread_ap_CS_fsm_state34() {
    ap_CS_fsm_state34 = ap_CS_fsm.read()[20];
}

void kernel7::thread_ap_CS_fsm_state35() {
    ap_CS_fsm_state35 = ap_CS_fsm.read()[21];
}

void kernel7::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[23];
}

void kernel7::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[24];
}

void kernel7::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[25];
}

void kernel7::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[27];
}

void kernel7::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[28];
}

void kernel7::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[29];
}

void kernel7::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[31];
}

void kernel7::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[32];
}

void kernel7::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[33];
}

void kernel7::thread_ap_CS_fsm_state50() {
    ap_CS_fsm_state50 = ap_CS_fsm.read()[36];
}

void kernel7::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_pp0_stage0_00001() {
    ap_block_pp0_stage0_00001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_state10_pp0_stage0_iter7() {
    ap_block_state10_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_state11_pp0_stage0_iter8() {
    ap_block_state11_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_state12_pp0_stage0_iter9() {
    ap_block_state12_pp0_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_state13_pp0_stage0_iter10() {
    ap_block_state13_pp0_stage0_iter10 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_state14_pp0_stage0_iter11() {
    ap_block_state14_pp0_stage0_iter11 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_state15_pp0_stage0_iter12() {
    ap_block_state15_pp0_stage0_iter12 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_state16_pp0_stage0_iter13() {
    ap_block_state16_pp0_stage0_iter13 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_state5_pp0_stage0_iter2() {
    ap_block_state5_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_state6_pp0_stage0_iter3() {
    ap_block_state6_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_state7_pp0_stage0_iter4() {
    ap_block_state7_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_state8_pp0_stage0_iter5() {
    ap_block_state8_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_block_state9_pp0_stage0_iter6() {
    ap_block_state9_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel7::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln8_fu_260_p2.read())) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void kernel7::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void kernel7::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void kernel7::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void kernel7::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter10.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter11.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter12.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter13.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void kernel7::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void kernel7::thread_ap_return() {
    ap_return = grp_fu_214_p2.read();
}

void kernel7::thread_array1_address0() {
    array1_address0 =  (sc_lv<11>) (zext_ln11_fu_276_p1.read());
}

void kernel7::thread_array1_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        array1_ce0 = ap_const_logic_1;
    } else {
        array1_ce0 = ap_const_logic_0;
    }
}

void kernel7::thread_array2_address0() {
    array2_address0 =  (sc_lv<11>) (zext_ln11_fu_276_p1.read());
}

void kernel7::thread_array2_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        array2_ce0 = ap_const_logic_1;
    } else {
        array2_ce0 = ap_const_logic_0;
    }
}

void kernel7::thread_bitcast_ln12_fu_282_p1() {
    bitcast_ln12_fu_282_p1 = reg_228_pp0_iter6_reg.read();
}

void kernel7::thread_grp_fu_214_opcode() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_00001.read(), ap_const_boolean_0))) {
        grp_fu_214_opcode = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()))) {
        grp_fu_214_opcode = ap_const_lv2_0;
    } else {
        grp_fu_214_opcode = "XX";
    }
}

void kernel7::thread_grp_fu_214_p0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()))) {
        grp_fu_214_p0 = reg_228.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        grp_fu_214_p0 = reg_235.read();
    } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        grp_fu_214_p0 = array1_load_reg_361.read();
    } else {
        grp_fu_214_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void kernel7::thread_grp_fu_214_p1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state23.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state27.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state31.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state35.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state39.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read()))) {
        grp_fu_214_p1 = reg_235.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        grp_fu_214_p1 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        grp_fu_214_p1 = array2_load_reg_366.read();
    } else {
        grp_fu_214_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void kernel7::thread_i_fu_266_p2() {
    i_fu_266_p2 = (!i_0_reg_203.read().is_01() || !ap_const_lv12_1.is_01())? sc_lv<12>(): (sc_biguint<12>(i_0_reg_203.read()) + sc_biguint<12>(ap_const_lv12_1));
}

void kernel7::thread_icmp_ln12_1_fu_306_p2() {
    icmp_ln12_1_fu_306_p2 = (!trunc_ln12_fu_296_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln12_fu_296_p1.read() == ap_const_lv23_0);
}

void kernel7::thread_icmp_ln12_fu_300_p2() {
    icmp_ln12_fu_300_p2 = (!tmp_fu_286_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_286_p4.read() != ap_const_lv8_FF);
}

void kernel7::thread_icmp_ln5_fu_254_p2() {
    icmp_ln5_fu_254_p2 = (!phi_ln5_reg_192.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln5_reg_192.read() == ap_const_lv3_7);
}

void kernel7::thread_icmp_ln8_fu_260_p2() {
    icmp_ln8_fu_260_p2 = (!i_0_reg_203.read().is_01() || !ap_const_lv12_800.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_203.read() == ap_const_lv12_800);
}

void kernel7::thread_idx_fu_272_p1() {
    idx_fu_272_p1 = i_0_reg_203.read().range(3-1, 0);
}

void kernel7::thread_or_ln12_fu_312_p2() {
    or_ln12_fu_312_p2 = (icmp_ln12_1_fu_306_p2.read() | icmp_ln12_fu_300_p2.read());
}

void kernel7::thread_ps_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        ps_address0 =  (sc_lv<3>) (ap_const_lv64_7);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        ps_address0 =  (sc_lv<3>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read())) {
        ps_address0 =  (sc_lv<3>) (ap_const_lv64_3);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        ps_address0 =  (sc_lv<3>) (ap_const_lv64_1);
    } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read()))) {
        ps_address0 =  (sc_lv<3>) (zext_ln14_fu_324_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        ps_address0 =  (sc_lv<3>) (zext_ln5_fu_249_p1.read());
    } else {
        ps_address0 =  (sc_lv<3>) ("XXX");
    }
}

void kernel7::thread_ps_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        ps_address1 =  (sc_lv<3>) (ap_const_lv64_6);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read())) {
        ps_address1 =  (sc_lv<3>) (ap_const_lv64_4);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        ps_address1 =  (sc_lv<3>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read())) {
        ps_address1 =  (sc_lv<3>) (ap_const_lv64_0);
    } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter13.read()))) {
        ps_address1 = ps_addr_1_reg_375_pp0_iter12_reg.read();
    } else {
        ps_address1 =  (sc_lv<3>) ("XXX");
    }
}

void kernel7::thread_ps_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state29.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter7.read())))) {
        ps_ce0 = ap_const_logic_1;
    } else {
        ps_ce0 = ap_const_logic_0;
    }
}

void kernel7::thread_ps_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state17.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state33.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read()) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter13.read())))) {
        ps_ce1 = ap_const_logic_1;
    } else {
        ps_ce1 = ap_const_logic_0;
    }
}

void kernel7::thread_ps_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        ps_we0 = ap_const_logic_1;
    } else {
        ps_we0 = ap_const_logic_0;
    }
}

void kernel7::thread_ps_we1() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter13.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, and_ln12_reg_371_pp0_iter12_reg.read()))) {
        ps_we1 = ap_const_logic_1;
    } else {
        ps_we1 = ap_const_logic_0;
    }
}

void kernel7::thread_tmp_fu_286_p4() {
    tmp_fu_286_p4 = bitcast_ln12_fu_282_p1.read().range(30, 23);
}

void kernel7::thread_trunc_ln12_fu_296_p1() {
    trunc_ln12_fu_296_p1 = bitcast_ln12_fu_282_p1.read().range(23-1, 0);
}

void kernel7::thread_zext_ln11_fu_276_p1() {
    zext_ln11_fu_276_p1 = esl_zext<64,12>(i_0_reg_203.read());
}

void kernel7::thread_zext_ln14_fu_324_p1() {
    zext_ln14_fu_324_p1 = esl_zext<64,3>(idx_reg_346_pp0_iter6_reg.read());
}

void kernel7::thread_zext_ln5_fu_249_p1() {
    zext_ln5_fu_249_p1 = esl_zext<64,3>(phi_ln5_reg_192.read());
}

void kernel7::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln5_fu_254_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter13.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter12.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln8_fu_260_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter13.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter12.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln8_fu_260_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state17;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state26;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state38;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state42;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state43;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state44;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state45;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state46;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state47;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state48;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state49;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state50;
            break;
        case 68719476736 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<37>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

void kernel7::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"array1_address0\" :  \"" << array1_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"array1_ce0\" :  \"" << array1_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"array1_q0\" :  \"" << array1_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"array2_address0\" :  \"" << array2_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"array2_ce0\" :  \"" << array2_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"array2_q0\" :  \"" << array2_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

