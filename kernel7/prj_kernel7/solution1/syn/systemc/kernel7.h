// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _kernel7_HH_
#define _kernel7_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "kernel7_faddfsub_bkb.h"
#include "kernel7_fadd_32nscud.h"
#include "kernel7_fcmp_32nsdEe.h"
#include "kernel7_ps.h"

namespace ap_rtl {

struct kernel7 : public sc_module {
    // Port declarations 13
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<11> > array1_address0;
    sc_out< sc_logic > array1_ce0;
    sc_in< sc_lv<32> > array1_q0;
    sc_out< sc_lv<11> > array2_address0;
    sc_out< sc_logic > array2_ce0;
    sc_in< sc_lv<32> > array2_q0;
    sc_out< sc_lv<32> > ap_return;
    sc_signal< sc_logic > ap_var_for_const1;
    sc_signal< sc_lv<32> > ap_var_for_const0;
    sc_signal< sc_lv<5> > ap_var_for_const2;


    // Module declarations
    kernel7(sc_module_name name);
    SC_HAS_PROCESS(kernel7);

    ~kernel7();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    kernel7_ps* ps_U;
    kernel7_faddfsub_bkb<1,4,32,32,32>* kernel7_faddfsub_bkb_U1;
    kernel7_fadd_32nscud<1,4,32,32,32>* kernel7_fadd_32nscud_U2;
    kernel7_fcmp_32nsdEe<1,2,32,32,1>* kernel7_fcmp_32nsdEe_U3;
    sc_signal< sc_lv<37> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<12> > i_0_reg_203;
    sc_signal< sc_lv<32> > grp_fu_214_p2;
    sc_signal< sc_lv<32> > reg_228;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter8;
    sc_signal< bool > ap_block_state12_pp0_stage0_iter9;
    sc_signal< bool > ap_block_state13_pp0_stage0_iter10;
    sc_signal< bool > ap_block_state14_pp0_stage0_iter11;
    sc_signal< bool > ap_block_state15_pp0_stage0_iter12;
    sc_signal< bool > ap_block_state16_pp0_stage0_iter13;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<32> > reg_228_pp0_iter6_reg;
    sc_signal< sc_lv<32> > reg_228_pp0_iter7_reg;
    sc_signal< sc_lv<32> > reg_228_pp0_iter8_reg;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_logic > ap_CS_fsm_state26;
    sc_signal< sc_logic > ap_CS_fsm_state30;
    sc_signal< sc_logic > ap_CS_fsm_state34;
    sc_signal< sc_logic > ap_CS_fsm_state38;
    sc_signal< sc_logic > ap_CS_fsm_state42;
    sc_signal< sc_logic > ap_CS_fsm_state46;
    sc_signal< sc_lv<32> > ps_q0;
    sc_signal< sc_lv<32> > reg_235;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< sc_lv<1> > and_ln12_reg_371;
    sc_signal< sc_lv<32> > ps_q1;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<3> > add_ln5_fu_243_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln5_fu_254_p2;
    sc_signal< sc_lv<1> > icmp_ln8_fu_260_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_lv<12> > i_fu_266_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<3> > idx_fu_272_p1;
    sc_signal< sc_lv<3> > idx_reg_346;
    sc_signal< sc_lv<3> > idx_reg_346_pp0_iter1_reg;
    sc_signal< sc_lv<3> > idx_reg_346_pp0_iter2_reg;
    sc_signal< sc_lv<3> > idx_reg_346_pp0_iter3_reg;
    sc_signal< sc_lv<3> > idx_reg_346_pp0_iter4_reg;
    sc_signal< sc_lv<3> > idx_reg_346_pp0_iter5_reg;
    sc_signal< sc_lv<3> > idx_reg_346_pp0_iter6_reg;
    sc_signal< sc_lv<32> > array1_load_reg_361;
    sc_signal< sc_lv<32> > array2_load_reg_366;
    sc_signal< sc_lv<1> > and_ln12_fu_318_p2;
    sc_signal< sc_lv<1> > and_ln12_reg_371_pp0_iter8_reg;
    sc_signal< sc_lv<1> > and_ln12_reg_371_pp0_iter9_reg;
    sc_signal< sc_lv<1> > and_ln12_reg_371_pp0_iter10_reg;
    sc_signal< sc_lv<1> > and_ln12_reg_371_pp0_iter11_reg;
    sc_signal< sc_lv<1> > and_ln12_reg_371_pp0_iter12_reg;
    sc_signal< sc_lv<3> > ps_addr_1_reg_375;
    sc_signal< sc_lv<3> > ps_addr_1_reg_375_pp0_iter8_reg;
    sc_signal< sc_lv<3> > ps_addr_1_reg_375_pp0_iter9_reg;
    sc_signal< sc_lv<3> > ps_addr_1_reg_375_pp0_iter10_reg;
    sc_signal< sc_lv<3> > ps_addr_1_reg_375_pp0_iter11_reg;
    sc_signal< sc_lv<3> > ps_addr_1_reg_375_pp0_iter12_reg;
    sc_signal< sc_lv<32> > grp_fu_218_p2;
    sc_signal< sc_lv<32> > tmp_1_reg_381;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_logic > ap_CS_fsm_state29;
    sc_signal< sc_logic > ap_CS_fsm_state33;
    sc_signal< sc_logic > ap_CS_fsm_state37;
    sc_signal< sc_logic > ap_CS_fsm_state41;
    sc_signal< sc_logic > ap_CS_fsm_state45;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter9;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter10;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter11;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter12;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter13;
    sc_signal< sc_lv<3> > ps_address0;
    sc_signal< sc_logic > ps_ce0;
    sc_signal< sc_logic > ps_we0;
    sc_signal< sc_lv<3> > ps_address1;
    sc_signal< sc_logic > ps_ce1;
    sc_signal< sc_logic > ps_we1;
    sc_signal< sc_lv<3> > phi_ln5_reg_192;
    sc_signal< sc_lv<64> > zext_ln5_fu_249_p1;
    sc_signal< sc_lv<64> > zext_ln11_fu_276_p1;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > zext_ln14_fu_324_p1;
    sc_signal< sc_lv<32> > grp_fu_214_p0;
    sc_signal< sc_lv<32> > grp_fu_214_p1;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_logic > ap_CS_fsm_state27;
    sc_signal< sc_logic > ap_CS_fsm_state31;
    sc_signal< sc_logic > ap_CS_fsm_state35;
    sc_signal< sc_logic > ap_CS_fsm_state39;
    sc_signal< sc_logic > ap_CS_fsm_state43;
    sc_signal< sc_logic > ap_CS_fsm_state47;
    sc_signal< sc_lv<32> > bitcast_ln12_fu_282_p1;
    sc_signal< sc_lv<8> > tmp_fu_286_p4;
    sc_signal< sc_lv<23> > trunc_ln12_fu_296_p1;
    sc_signal< sc_lv<1> > icmp_ln12_1_fu_306_p2;
    sc_signal< sc_lv<1> > icmp_ln12_fu_300_p2;
    sc_signal< sc_lv<1> > or_ln12_fu_312_p2;
    sc_signal< sc_lv<1> > grp_fu_223_p2;
    sc_signal< sc_lv<2> > grp_fu_214_opcode;
    sc_signal< bool > ap_block_pp0_stage0_00001;
    sc_signal< sc_logic > ap_CS_fsm_state50;
    sc_signal< sc_lv<37> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<37> ap_ST_fsm_state1;
    static const sc_lv<37> ap_ST_fsm_state2;
    static const sc_lv<37> ap_ST_fsm_pp0_stage0;
    static const sc_lv<37> ap_ST_fsm_state17;
    static const sc_lv<37> ap_ST_fsm_state18;
    static const sc_lv<37> ap_ST_fsm_state19;
    static const sc_lv<37> ap_ST_fsm_state20;
    static const sc_lv<37> ap_ST_fsm_state21;
    static const sc_lv<37> ap_ST_fsm_state22;
    static const sc_lv<37> ap_ST_fsm_state23;
    static const sc_lv<37> ap_ST_fsm_state24;
    static const sc_lv<37> ap_ST_fsm_state25;
    static const sc_lv<37> ap_ST_fsm_state26;
    static const sc_lv<37> ap_ST_fsm_state27;
    static const sc_lv<37> ap_ST_fsm_state28;
    static const sc_lv<37> ap_ST_fsm_state29;
    static const sc_lv<37> ap_ST_fsm_state30;
    static const sc_lv<37> ap_ST_fsm_state31;
    static const sc_lv<37> ap_ST_fsm_state32;
    static const sc_lv<37> ap_ST_fsm_state33;
    static const sc_lv<37> ap_ST_fsm_state34;
    static const sc_lv<37> ap_ST_fsm_state35;
    static const sc_lv<37> ap_ST_fsm_state36;
    static const sc_lv<37> ap_ST_fsm_state37;
    static const sc_lv<37> ap_ST_fsm_state38;
    static const sc_lv<37> ap_ST_fsm_state39;
    static const sc_lv<37> ap_ST_fsm_state40;
    static const sc_lv<37> ap_ST_fsm_state41;
    static const sc_lv<37> ap_ST_fsm_state42;
    static const sc_lv<37> ap_ST_fsm_state43;
    static const sc_lv<37> ap_ST_fsm_state44;
    static const sc_lv<37> ap_ST_fsm_state45;
    static const sc_lv<37> ap_ST_fsm_state46;
    static const sc_lv<37> ap_ST_fsm_state47;
    static const sc_lv<37> ap_ST_fsm_state48;
    static const sc_lv<37> ap_ST_fsm_state49;
    static const sc_lv<37> ap_ST_fsm_state50;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<12> ap_const_lv12_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<64> ap_const_lv64_2;
    static const sc_lv<64> ap_const_lv64_3;
    static const sc_lv<64> ap_const_lv64_4;
    static const sc_lv<64> ap_const_lv64_5;
    static const sc_lv<64> ap_const_lv64_6;
    static const sc_lv<64> ap_const_lv64_7;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_19;
    static const sc_lv<32> ap_const_lv32_1D;
    static const sc_lv<32> ap_const_lv32_21;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_7;
    static const sc_lv<12> ap_const_lv12_800;
    static const sc_lv<12> ap_const_lv12_1;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<32> ap_const_lv32_24;
    // Thread declarations
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const2();
    void thread_ap_clk_no_reset_();
    void thread_add_ln5_fu_243_p2();
    void thread_and_ln12_fu_318_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state26();
    void thread_ap_CS_fsm_state27();
    void thread_ap_CS_fsm_state29();
    void thread_ap_CS_fsm_state30();
    void thread_ap_CS_fsm_state31();
    void thread_ap_CS_fsm_state33();
    void thread_ap_CS_fsm_state34();
    void thread_ap_CS_fsm_state35();
    void thread_ap_CS_fsm_state37();
    void thread_ap_CS_fsm_state38();
    void thread_ap_CS_fsm_state39();
    void thread_ap_CS_fsm_state41();
    void thread_ap_CS_fsm_state42();
    void thread_ap_CS_fsm_state43();
    void thread_ap_CS_fsm_state45();
    void thread_ap_CS_fsm_state46();
    void thread_ap_CS_fsm_state47();
    void thread_ap_CS_fsm_state50();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_00001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state10_pp0_stage0_iter7();
    void thread_ap_block_state11_pp0_stage0_iter8();
    void thread_ap_block_state12_pp0_stage0_iter9();
    void thread_ap_block_state13_pp0_stage0_iter10();
    void thread_ap_block_state14_pp0_stage0_iter11();
    void thread_ap_block_state15_pp0_stage0_iter12();
    void thread_ap_block_state16_pp0_stage0_iter13();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage0_iter2();
    void thread_ap_block_state6_pp0_stage0_iter3();
    void thread_ap_block_state7_pp0_stage0_iter4();
    void thread_ap_block_state8_pp0_stage0_iter5();
    void thread_ap_block_state9_pp0_stage0_iter6();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_array1_address0();
    void thread_array1_ce0();
    void thread_array2_address0();
    void thread_array2_ce0();
    void thread_bitcast_ln12_fu_282_p1();
    void thread_grp_fu_214_opcode();
    void thread_grp_fu_214_p0();
    void thread_grp_fu_214_p1();
    void thread_i_fu_266_p2();
    void thread_icmp_ln12_1_fu_306_p2();
    void thread_icmp_ln12_fu_300_p2();
    void thread_icmp_ln5_fu_254_p2();
    void thread_icmp_ln8_fu_260_p2();
    void thread_idx_fu_272_p1();
    void thread_or_ln12_fu_312_p2();
    void thread_ps_address0();
    void thread_ps_address1();
    void thread_ps_ce0();
    void thread_ps_ce1();
    void thread_ps_we0();
    void thread_ps_we1();
    void thread_tmp_fu_286_p4();
    void thread_trunc_ln12_fu_296_p1();
    void thread_zext_ln11_fu_276_p1();
    void thread_zext_ln14_fu_324_p1();
    void thread_zext_ln5_fu_249_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
