// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "kernel9.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic kernel9::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic kernel9::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<5> kernel9::ap_ST_fsm_state1 = "1";
const sc_lv<5> kernel9::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<5> kernel9::ap_ST_fsm_state8 = "100";
const sc_lv<5> kernel9::ap_ST_fsm_pp1_stage0 = "1000";
const sc_lv<5> kernel9::ap_ST_fsm_state11 = "10000";
const sc_lv<32> kernel9::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool kernel9::ap_const_boolean_1 = true;
const sc_lv<32> kernel9::ap_const_lv32_1 = "1";
const bool kernel9::ap_const_boolean_0 = false;
const sc_lv<1> kernel9::ap_const_lv1_0 = "0";
const sc_lv<32> kernel9::ap_const_lv32_3 = "11";
const sc_lv<1> kernel9::ap_const_lv1_1 = "1";
const sc_lv<32> kernel9::ap_const_lv32_2 = "10";
const sc_lv<8> kernel9::ap_const_lv8_0 = "00000000";
const sc_lv<8> kernel9::ap_const_lv8_80 = "10000000";
const sc_lv<8> kernel9::ap_const_lv8_1 = "1";
const sc_lv<32> kernel9::ap_const_lv32_4 = "100";

kernel9::kernel9(sc_module_name name) : sc_module(name), mVcdFile(0) {
    idxa_U = new kernel9_idxa("idxa_U");
    idxa_U->clk(ap_clk);
    idxa_U->reset(ap_rst);
    idxa_U->address0(idxa_address0);
    idxa_U->ce0(idxa_ce0);
    idxa_U->we0(idxa_we0);
    idxa_U->d0(idx_reg_255);
    idxa_U->q0(idxa_q0);
    val_U = new kernel9_idxa("val_U");
    val_U->clk(ap_clk);
    val_U->reset(ap_rst);
    val_U->address0(val_address0);
    val_U->ce0(val_ce0);
    val_U->we0(val_we0);
    val_U->d0(val_d0);
    val_U->q0(val_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_a_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln10_fu_155_p1 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( sext_ln20_fu_206_p1 );

    SC_METHOD(thread_a_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_a_d0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( val_q0 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_a_we0);
    sensitive << ( icmp_ln17_reg_260 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);

    SC_METHOD(thread_ap_block_state10_pp1_stage0_iter1);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state9_pp1_stage0_iter0);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln7_fu_143_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state9);
    sensitive << ( icmp_ln17_fu_188_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_ap_phi_mux_i_0_phi_fu_112_p4);
    sensitive << ( i_0_reg_108 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( icmp_ln7_reg_211 );
    sensitive << ( i_reg_215 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_phi_mux_x_0_phi_fu_124_p4);
    sensitive << ( x_0_reg_120 );
    sensitive << ( icmp_ln7_reg_211_pp0_iter1_reg );
    sensitive << ( x_reg_231 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_i_1_fu_194_p2);
    sensitive << ( i1_0_reg_132 );

    SC_METHOD(thread_i_fu_149_p2);
    sensitive << ( ap_phi_mux_i_0_phi_fu_112_p4 );

    SC_METHOD(thread_icmp_ln17_fu_188_p2);
    sensitive << ( i1_0_reg_132 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_icmp_ln7_fu_143_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_phi_mux_i_0_phi_fu_112_p4 );

    SC_METHOD(thread_idx_fu_184_p2);
    sensitive << ( mul_ln11_reg_245 );
    sensitive << ( mul_ln11_2_reg_250 );

    SC_METHOD(thread_idxa_address0);
    sensitive << ( zext_ln10_reg_220_pp0_iter4_reg );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln20_fu_200_p1 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_idxa_ce0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_idxa_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln7_reg_211_pp0_iter4_reg );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_mul_ln11_1_fu_167_p2);
    sensitive << ( x_reg_231 );

    SC_METHOD(thread_mul_ln11_2_fu_180_p2);
    sensitive << ( x_reg_231_pp0_iter2_reg );
    sensitive << ( mul_ln11_1_reg_240 );

    SC_METHOD(thread_mul_ln11_fu_175_p0);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( mul_ln11_fu_175_p00 );

    SC_METHOD(thread_mul_ln11_fu_175_p00);
    sensitive << ( i_0_reg_108_pp0_iter2_reg );

    SC_METHOD(thread_mul_ln11_fu_175_p2);
    sensitive << ( x_reg_231_pp0_iter2_reg );
    sensitive << ( mul_ln11_fu_175_p0 );

    SC_METHOD(thread_sext_ln20_fu_206_p1);
    sensitive << ( idxa_q0 );

    SC_METHOD(thread_val_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( zext_ln10_reg_220 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln20_fu_200_p1 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_val_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_val_d0);
    sensitive << ( a_q0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_phi_mux_x_0_phi_fu_124_p4 );

    SC_METHOD(thread_val_we0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln7_reg_211 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_x_fu_160_p2);
    sensitive << ( a_q0 );
    sensitive << ( ap_phi_mux_x_0_phi_fu_124_p4 );

    SC_METHOD(thread_zext_ln10_fu_155_p1);
    sensitive << ( ap_phi_mux_i_0_phi_fu_112_p4 );

    SC_METHOD(thread_zext_ln20_fu_200_p1);
    sensitive << ( i1_0_reg_132 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln7_fu_143_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln17_fu_188_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_block_pp1_stage0_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "00001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "kernel9_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, a_address0, "(port)a_address0");
    sc_trace(mVcdFile, a_ce0, "(port)a_ce0");
    sc_trace(mVcdFile, a_we0, "(port)a_we0");
    sc_trace(mVcdFile, a_d0, "(port)a_d0");
    sc_trace(mVcdFile, a_q0, "(port)a_q0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_0_reg_108, "i_0_reg_108");
    sc_trace(mVcdFile, i_0_reg_108_pp0_iter1_reg, "i_0_reg_108_pp0_iter1_reg");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter5, "ap_block_state7_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i_0_reg_108_pp0_iter2_reg, "i_0_reg_108_pp0_iter2_reg");
    sc_trace(mVcdFile, x_0_reg_120, "x_0_reg_120");
    sc_trace(mVcdFile, i1_0_reg_132, "i1_0_reg_132");
    sc_trace(mVcdFile, icmp_ln7_fu_143_p2, "icmp_ln7_fu_143_p2");
    sc_trace(mVcdFile, icmp_ln7_reg_211, "icmp_ln7_reg_211");
    sc_trace(mVcdFile, icmp_ln7_reg_211_pp0_iter1_reg, "icmp_ln7_reg_211_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln7_reg_211_pp0_iter2_reg, "icmp_ln7_reg_211_pp0_iter2_reg");
    sc_trace(mVcdFile, icmp_ln7_reg_211_pp0_iter3_reg, "icmp_ln7_reg_211_pp0_iter3_reg");
    sc_trace(mVcdFile, icmp_ln7_reg_211_pp0_iter4_reg, "icmp_ln7_reg_211_pp0_iter4_reg");
    sc_trace(mVcdFile, i_fu_149_p2, "i_fu_149_p2");
    sc_trace(mVcdFile, i_reg_215, "i_reg_215");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, zext_ln10_fu_155_p1, "zext_ln10_fu_155_p1");
    sc_trace(mVcdFile, zext_ln10_reg_220, "zext_ln10_reg_220");
    sc_trace(mVcdFile, zext_ln10_reg_220_pp0_iter1_reg, "zext_ln10_reg_220_pp0_iter1_reg");
    sc_trace(mVcdFile, zext_ln10_reg_220_pp0_iter2_reg, "zext_ln10_reg_220_pp0_iter2_reg");
    sc_trace(mVcdFile, zext_ln10_reg_220_pp0_iter3_reg, "zext_ln10_reg_220_pp0_iter3_reg");
    sc_trace(mVcdFile, zext_ln10_reg_220_pp0_iter4_reg, "zext_ln10_reg_220_pp0_iter4_reg");
    sc_trace(mVcdFile, x_fu_160_p2, "x_fu_160_p2");
    sc_trace(mVcdFile, x_reg_231, "x_reg_231");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, x_reg_231_pp0_iter2_reg, "x_reg_231_pp0_iter2_reg");
    sc_trace(mVcdFile, mul_ln11_1_fu_167_p2, "mul_ln11_1_fu_167_p2");
    sc_trace(mVcdFile, mul_ln11_1_reg_240, "mul_ln11_1_reg_240");
    sc_trace(mVcdFile, mul_ln11_fu_175_p2, "mul_ln11_fu_175_p2");
    sc_trace(mVcdFile, mul_ln11_reg_245, "mul_ln11_reg_245");
    sc_trace(mVcdFile, mul_ln11_2_fu_180_p2, "mul_ln11_2_fu_180_p2");
    sc_trace(mVcdFile, mul_ln11_2_reg_250, "mul_ln11_2_reg_250");
    sc_trace(mVcdFile, idx_fu_184_p2, "idx_fu_184_p2");
    sc_trace(mVcdFile, idx_reg_255, "idx_reg_255");
    sc_trace(mVcdFile, icmp_ln17_fu_188_p2, "icmp_ln17_fu_188_p2");
    sc_trace(mVcdFile, icmp_ln17_reg_260, "icmp_ln17_reg_260");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_block_state9_pp1_stage0_iter0, "ap_block_state9_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state10_pp1_stage0_iter1, "ap_block_state10_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, i_1_fu_194_p2, "i_1_fu_194_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state9, "ap_condition_pp1_exit_iter0_state9");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, idxa_address0, "idxa_address0");
    sc_trace(mVcdFile, idxa_ce0, "idxa_ce0");
    sc_trace(mVcdFile, idxa_we0, "idxa_we0");
    sc_trace(mVcdFile, idxa_q0, "idxa_q0");
    sc_trace(mVcdFile, val_address0, "val_address0");
    sc_trace(mVcdFile, val_ce0, "val_ce0");
    sc_trace(mVcdFile, val_we0, "val_we0");
    sc_trace(mVcdFile, val_d0, "val_d0");
    sc_trace(mVcdFile, val_q0, "val_q0");
    sc_trace(mVcdFile, ap_phi_mux_i_0_phi_fu_112_p4, "ap_phi_mux_i_0_phi_fu_112_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_phi_mux_x_0_phi_fu_124_p4, "ap_phi_mux_x_0_phi_fu_124_p4");
    sc_trace(mVcdFile, zext_ln20_fu_200_p1, "zext_ln20_fu_200_p1");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, sext_ln20_fu_206_p1, "sext_ln20_fu_206_p1");
    sc_trace(mVcdFile, mul_ln11_fu_175_p0, "mul_ln11_fu_175_p0");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, mul_ln11_fu_175_p00, "mul_ln11_fu_175_p00");
#endif

    }
    mHdltvinHandle.open("kernel9.hdltvin.dat");
    mHdltvoutHandle.open("kernel9.hdltvout.dat");
}

kernel9::~kernel9() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete idxa_U;
    delete val_U;
}

void kernel9::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter5 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state9.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state9.read()))) {
            ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state9.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i1_0_reg_132 = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln17_fu_188_p2.read()))) {
        i1_0_reg_132 = i_1_fu_194_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln7_reg_211.read(), ap_const_lv1_0))) {
        i_0_reg_108 = i_reg_215.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_108 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln7_reg_211_pp0_iter1_reg.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        x_0_reg_120 = x_reg_231.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        x_0_reg_120 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_0_reg_108_pp0_iter1_reg = i_0_reg_108.read();
        icmp_ln7_reg_211 = icmp_ln7_fu_143_p2.read();
        icmp_ln7_reg_211_pp0_iter1_reg = icmp_ln7_reg_211.read();
        zext_ln10_reg_220_pp0_iter1_reg = zext_ln10_reg_220.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        i_0_reg_108_pp0_iter2_reg = i_0_reg_108_pp0_iter1_reg.read();
        icmp_ln7_reg_211_pp0_iter2_reg = icmp_ln7_reg_211_pp0_iter1_reg.read();
        icmp_ln7_reg_211_pp0_iter3_reg = icmp_ln7_reg_211_pp0_iter2_reg.read();
        icmp_ln7_reg_211_pp0_iter4_reg = icmp_ln7_reg_211_pp0_iter3_reg.read();
        x_reg_231_pp0_iter2_reg = x_reg_231.read();
        zext_ln10_reg_220_pp0_iter2_reg = zext_ln10_reg_220_pp0_iter1_reg.read();
        zext_ln10_reg_220_pp0_iter3_reg = zext_ln10_reg_220_pp0_iter2_reg.read();
        zext_ln10_reg_220_pp0_iter4_reg = zext_ln10_reg_220_pp0_iter3_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        i_reg_215 = i_fu_149_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln17_reg_260 = icmp_ln17_fu_188_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln7_reg_211_pp0_iter3_reg.read(), ap_const_lv1_0))) {
        idx_reg_255 = idx_fu_184_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln7_reg_211_pp0_iter1_reg.read(), ap_const_lv1_0))) {
        mul_ln11_1_reg_240 = mul_ln11_1_fu_167_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln7_reg_211_pp0_iter2_reg.read(), ap_const_lv1_0))) {
        mul_ln11_2_reg_250 = mul_ln11_2_fu_180_p2.read();
        mul_ln11_reg_245 = mul_ln11_fu_175_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && esl_seteq<1,1,1>(icmp_ln7_reg_211.read(), ap_const_lv1_0))) {
        x_reg_231 = x_fu_160_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln7_fu_143_p2.read(), ap_const_lv1_0))) {
        zext_ln10_reg_220 = zext_ln10_fu_155_p1.read();
    }
}

void kernel9::thread_a_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        a_address0 =  (sc_lv<11>) (sext_ln20_fu_206_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        a_address0 =  (sc_lv<11>) (zext_ln10_fu_155_p1.read());
    } else {
        a_address0 = "XXXXXXXXXXX";
    }
}

void kernel9::thread_a_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read())))) {
        a_ce0 = ap_const_logic_1;
    } else {
        a_ce0 = ap_const_logic_0;
    }
}

void kernel9::thread_a_d0() {
    a_d0 = val_q0.read();
}

void kernel9::thread_a_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln17_reg_260.read()))) {
        a_we0 = ap_const_logic_1;
    } else {
        a_we0 = ap_const_logic_0;
    }
}

void kernel9::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void kernel9::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[3];
}

void kernel9::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void kernel9::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[4];
}

void kernel9::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[2];
}

void kernel9::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel9::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel9::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel9::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel9::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel9::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel9::thread_ap_block_state10_pp1_stage0_iter1() {
    ap_block_state10_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel9::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel9::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel9::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel9::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel9::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel9::thread_ap_block_state7_pp0_stage0_iter5() {
    ap_block_state7_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel9::thread_ap_block_state9_pp1_stage0_iter0() {
    ap_block_state9_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void kernel9::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln7_fu_143_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void kernel9::thread_ap_condition_pp1_exit_iter0_state9() {
    if (esl_seteq<1,1,1>(icmp_ln17_fu_188_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state9 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state9 = ap_const_logic_0;
    }
}

void kernel9::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void kernel9::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void kernel9::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void kernel9::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void kernel9::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void kernel9::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void kernel9::thread_ap_phi_mux_i_0_phi_fu_112_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln7_reg_211.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_i_0_phi_fu_112_p4 = i_reg_215.read();
    } else {
        ap_phi_mux_i_0_phi_fu_112_p4 = i_0_reg_108.read();
    }
}

void kernel9::thread_ap_phi_mux_x_0_phi_fu_124_p4() {
    if ((esl_seteq<1,1,1>(icmp_ln7_reg_211_pp0_iter1_reg.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        ap_phi_mux_x_0_phi_fu_124_p4 = x_reg_231.read();
    } else {
        ap_phi_mux_x_0_phi_fu_124_p4 = x_0_reg_120.read();
    }
}

void kernel9::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void kernel9::thread_i_1_fu_194_p2() {
    i_1_fu_194_p2 = (!i1_0_reg_132.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(i1_0_reg_132.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void kernel9::thread_i_fu_149_p2() {
    i_fu_149_p2 = (!ap_phi_mux_i_0_phi_fu_112_p4.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(ap_phi_mux_i_0_phi_fu_112_p4.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void kernel9::thread_icmp_ln17_fu_188_p2() {
    icmp_ln17_fu_188_p2 = (!i1_0_reg_132.read().is_01() || !ap_const_lv8_80.is_01())? sc_lv<1>(): sc_lv<1>(i1_0_reg_132.read() == ap_const_lv8_80);
}

void kernel9::thread_icmp_ln7_fu_143_p2() {
    icmp_ln7_fu_143_p2 = (!ap_phi_mux_i_0_phi_fu_112_p4.read().is_01() || !ap_const_lv8_80.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i_0_phi_fu_112_p4.read() == ap_const_lv8_80);
}

void kernel9::thread_idx_fu_184_p2() {
    idx_fu_184_p2 = (!mul_ln11_2_reg_250.read().is_01() || !mul_ln11_reg_245.read().is_01())? sc_lv<32>(): sc_bigint<32>(mul_ln11_2_reg_250.read()) * sc_bigint<32>(mul_ln11_reg_245.read());
}

void kernel9::thread_idxa_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        idxa_address0 =  (sc_lv<7>) (zext_ln20_fu_200_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()))) {
        idxa_address0 =  (sc_lv<7>) (zext_ln10_reg_220_pp0_iter4_reg.read());
    } else {
        idxa_address0 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void kernel9::thread_idxa_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read())))) {
        idxa_ce0 = ap_const_logic_1;
    } else {
        idxa_ce0 = ap_const_logic_0;
    }
}

void kernel9::thread_idxa_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(icmp_ln7_reg_211_pp0_iter4_reg.read(), ap_const_lv1_0))) {
        idxa_we0 = ap_const_logic_1;
    } else {
        idxa_we0 = ap_const_logic_0;
    }
}

void kernel9::thread_mul_ln11_1_fu_167_p2() {
    mul_ln11_1_fu_167_p2 = (!x_reg_231.read().is_01() || !x_reg_231.read().is_01())? sc_lv<32>(): sc_bigint<32>(x_reg_231.read()) * sc_bigint<32>(x_reg_231.read());
}

void kernel9::thread_mul_ln11_2_fu_180_p2() {
    mul_ln11_2_fu_180_p2 = (!mul_ln11_1_reg_240.read().is_01() || !x_reg_231_pp0_iter2_reg.read().is_01())? sc_lv<32>(): sc_bigint<32>(mul_ln11_1_reg_240.read()) * sc_bigint<32>(x_reg_231_pp0_iter2_reg.read());
}

void kernel9::thread_mul_ln11_fu_175_p0() {
    mul_ln11_fu_175_p0 =  (sc_lv<8>) (mul_ln11_fu_175_p00.read());
}

void kernel9::thread_mul_ln11_fu_175_p00() {
    mul_ln11_fu_175_p00 = esl_zext<32,8>(i_0_reg_108_pp0_iter2_reg.read());
}

void kernel9::thread_mul_ln11_fu_175_p2() {
    mul_ln11_fu_175_p2 = (!mul_ln11_fu_175_p0.read().is_01() || !x_reg_231_pp0_iter2_reg.read().is_01())? sc_lv<32>(): sc_biguint<8>(mul_ln11_fu_175_p0.read()) * sc_bigint<32>(x_reg_231_pp0_iter2_reg.read());
}

void kernel9::thread_sext_ln20_fu_206_p1() {
    sext_ln20_fu_206_p1 = esl_sext<64,32>(idxa_q0.read());
}

void kernel9::thread_val_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        val_address0 =  (sc_lv<7>) (zext_ln20_fu_200_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0))) {
        val_address0 =  (sc_lv<7>) (zext_ln10_reg_220.read());
    } else {
        val_address0 =  (sc_lv<7>) ("XXXXXXX");
    }
}

void kernel9::thread_val_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read())))) {
        val_ce0 = ap_const_logic_1;
    } else {
        val_ce0 = ap_const_logic_0;
    }
}

void kernel9::thread_val_d0() {
    val_d0 = (!a_q0.read().is_01() || !ap_phi_mux_x_0_phi_fu_124_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(a_q0.read()) + sc_biguint<32>(ap_phi_mux_x_0_phi_fu_124_p4.read()));
}

void kernel9::thread_val_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln7_reg_211.read(), ap_const_lv1_0))) {
        val_we0 = ap_const_logic_1;
    } else {
        val_we0 = ap_const_logic_0;
    }
}

void kernel9::thread_x_fu_160_p2() {
    x_fu_160_p2 = (!a_q0.read().is_01() || !ap_phi_mux_x_0_phi_fu_124_p4.read().is_01())? sc_lv<32>(): (sc_biguint<32>(a_q0.read()) + sc_biguint<32>(ap_phi_mux_x_0_phi_fu_124_p4.read()));
}

void kernel9::thread_zext_ln10_fu_155_p1() {
    zext_ln10_fu_155_p1 = esl_zext<64,8>(ap_phi_mux_i_0_phi_fu_112_p4.read());
}

void kernel9::thread_zext_ln20_fu_200_p1() {
    zext_ln20_fu_200_p1 = esl_zext<64,8>(i1_0_reg_132.read());
}

void kernel9::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter4.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln7_fu_143_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter4.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln7_fu_143_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 8 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln17_fu_188_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln17_fu_188_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<5>) ("XXXXX");
            break;
    }
}

void kernel9::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_address0\" :  \"" << a_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_ce0\" :  \"" << a_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_we0\" :  \"" << a_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"a_d0\" :  \"" << a_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"a_q0\" :  \"" << a_q0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

